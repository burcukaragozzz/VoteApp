{"ast":null,"code":"var _jsxFileName = \"/Users/burcu.karagoz/Project/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementCount = index => {\n      const newLanguage = [...this.state.language];\n      newLanguage[index].votes++;\n      this.setState({\n        language: newLanguage\n      });\n    };\n\n    this.state = {\n      language: [{\n        vote: 0,\n        name: 'php'\n      }, {\n        vote: 0,\n        name: 'pyhton'\n      }, {\n        vote: 0,\n        name: 'go'\n      }, {\n        vote: 0,\n        name: 'java'\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Vote Your Language!\"), React.createElement(\"div\", {\n      className: \"languages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.language.map((lang, i) => React.createElement(\"div\", {\n      className: \"language\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"languageCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.language[i].vote), React.createElement(\"div\", {\n      className: \"languageName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.language[i].name), React.createElement(\"div\", {\n      className: \"click\",\n      onClick: () => this.incrementCount(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Clicks Here\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/burcu.karagoz/Project/my-app/src/App.js"],"names":["React","Component","App","constructor","props","incrementCount","index","newLanguage","state","language","votes","setState","vote","name","render","map","lang","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAExBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAarBC,cAbqB,GAaJC,KAAK,IAAI;AACxB,YAAMC,WAAW,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,QAAf,CAApB;AACAF,MAAAA,WAAW,CAACD,KAAD,CAAX,CAAmBI,KAAnB;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAEF;AADE,OAAd;AAGD,KAnBoB;;AAEf,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CACR;AAACG,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,IAAI,EAAE;AAAhB,OADQ,EAER;AAACD,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,IAAI,EAAE;AAAhB,OAFQ,EAGR;AAACD,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,IAAI,EAAE;AAAhB,OAHQ,EAIR;AAACD,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,IAAI,EAAE;AAAhB,OAJQ;AADC,KAAb;AASH;;AAUHC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,GAApB,CAAwB,CAACC,IAAD,EAAOC,CAAP,KACxB;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKT,KAAL,CAAWC,QAAX,CAAoBQ,CAApB,EAAuBL,IAAxD,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKJ,KAAL,CAAWC,QAAX,CAAoBQ,CAApB,EAAuBJ,IAAtD,CAFF,EAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAE,MAAO,KAAKR,cAAL,CAAoBY,CAApB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADA,CAFJ,CAFF,CADF;AAkBD;;AA1CyB;;AA6C5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n          language: [\n            {vote: 0, name: 'php'},\n            {vote: 0, name: 'pyhton'},\n            {vote: 0, name: 'go'},\n            {vote: 0, name: 'java'},\n          ],\n          \n        };\n    }\n\n  incrementCount = index => {\n    const newLanguage = [...this.state.language];\n    newLanguage[index].votes++;\n    this.setState({\n      language: newLanguage\n    })\n  };\n\n  render(){\n    return(\n      <div>\n        <h1>Vote Your Language!</h1>\n        <div className=\"languages\">\n          {\n            this.state.language.map((lang, i) =>       \n            <div className=\"language\">\n              <div className=\"languageCount\">{ this.state.language[i].vote }</div>\n              <div className=\"languageName\">{this.state.language[i].name}</div>\n              <div className=\"click\" onClick={() =>  this.incrementCount(i)}>\n                Clicks Here\n              </div>\n            </div>\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}