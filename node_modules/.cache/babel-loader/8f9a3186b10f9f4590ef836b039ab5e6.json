{"ast":null,"code":"var _jsxFileName = \"/Users/burcu.karagoz/Project/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementCount = language => {\n      debugger;\n      const newLanguage = [...this.state.language];\n      newLanguage.map((lang, i) => {\n        if (newLanguage[i].name === language) {\n          newLanguage[i].vote++;\n        }\n\n        return lang;\n      });\n      console.log(newLanguage, \"<<<\");\n    };\n\n    this.state = {\n      language: [{\n        vote: 0,\n        name: 'php',\n        text: \"Click Here\"\n      }, {\n        vote: 0,\n        name: 'pyhton',\n        text: \"Click Here\"\n      }, {\n        vote: 0,\n        name: 'go',\n        text: \"Click Here\"\n      }, {\n        vote: 0,\n        name: 'java',\n        text: \"Click Here\"\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Vote Your Language!\"), React.createElement(\"div\", {\n      className: \"languages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.language.map((lang, i) => React.createElement(\"div\", {\n      className: \"language\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"languageCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.language[i].vote), React.createElement(\"div\", {\n      className: \"languageName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.language[i].name), React.createElement(\"div\", {\n      className: \"click\",\n      onClick: () => this.incrementCount(this.state.language[i].name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Clicks Here\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/burcu.karagoz/Project/my-app/src/App.js"],"names":["React","Component","App","constructor","props","incrementCount","language","newLanguage","state","map","lang","i","name","vote","console","log","text","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAG1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAarBC,cAbqB,GAaJC,QAAQ,IAAI;AAC3B;AACA,YAAMC,WAAW,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWF,QAAf,CAApB;AACAC,MAAAA,WAAW,CAACE,GAAZ,CAAgB,CAACC,IAAD,EAAMC,CAAN,KAAY;AAC1B,YAAGJ,WAAW,CAACI,CAAD,CAAX,CAAeC,IAAf,KAAwBN,QAA3B,EAAqC;AACnCC,UAAAA,WAAW,CAACI,CAAD,CAAX,CAAeE,IAAf;AACD;;AACD,eAAOH,IAAP;AACD,OALD;AAMAI,MAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACD,KAvBoB;;AAEf,SAAKC,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAE,CACR;AAACO,QAAAA,IAAI,EAAE,CAAP;AAAUD,QAAAA,IAAI,EAAE,KAAhB;AAAuBI,QAAAA,IAAI,EAAC;AAA5B,OADQ,EAER;AAACH,QAAAA,IAAI,EAAE,CAAP;AAAUD,QAAAA,IAAI,EAAE,QAAhB;AAA0BI,QAAAA,IAAI,EAAC;AAA/B,OAFQ,EAGR;AAACH,QAAAA,IAAI,EAAE,CAAP;AAAUD,QAAAA,IAAI,EAAE,IAAhB;AAAsBI,QAAAA,IAAI,EAAC;AAA3B,OAHQ,EAIR;AAACH,QAAAA,IAAI,EAAE,CAAP;AAAUD,QAAAA,IAAI,EAAE,MAAhB;AAAwBI,QAAAA,IAAI,EAAC;AAA7B,OAJQ;AADC,KAAb;AAQH;;AAeHC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKT,KAAL,CAAWF,QAAX,CAAoBG,GAApB,CAAwB,CAACC,IAAD,EAAOC,CAAP,KACxB;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKH,KAAL,CAAWF,QAAX,CAAoBK,CAApB,EAAuBE,IAAxD,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKL,KAAL,CAAWF,QAAX,CAAoBK,CAApB,EAAuBC,IAAtD,CAFF,EAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAE,MAAO,KAAKP,cAAL,CAAoB,KAAKG,KAAL,CAAWF,QAAX,CAAoBK,CAApB,EAAuBC,IAA3C,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADA,CAFJ,CAFF,CADF;AAkBD;;AA/C2B;;AAkD5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  \n  constructor(props) {\n      super(props);\n      this.state = { \n        language: [\n          {vote: 0, name: 'php', text:\"Click Here\"},\n          {vote: 0, name: 'pyhton', text:\"Click Here\"},\n          {vote: 0, name: 'go', text:\"Click Here\"},\n          {vote: 0, name: 'java', text:\"Click Here\"},\n        ]\n       };\n  }\n\n  \nincrementCount = language => {\n  debugger;\n  const newLanguage = [...this.state.language];\n  newLanguage.map((lang,i) => {\n    if(newLanguage[i].name === language) {\n      newLanguage[i].vote++;\n    }\n    return lang;\n  });\n  console.log(newLanguage,`<<<`);\n};\n\nrender(){\n  return(\n    <div>\n      <h1>Vote Your Language!</h1>\n      <div className=\"languages\">\n        {\n          this.state.language.map((lang, i) =>       \n          <div className=\"language\">\n            <div className=\"languageCount\">{ this.state.language[i].vote }</div>\n            <div className=\"languageName\">{this.state.language[i].name}</div>\n            <div className=\"click\" onClick={() =>  this.incrementCount(this.state.language[i].name)}>\n              Clicks Here\n            </div>\n          </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}